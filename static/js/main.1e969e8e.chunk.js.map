{"version":3,"sources":["components/Generator.js","components/tweeter.js","components/background.js","components/MainIntro.js","App.js","serviceWorker.js","index.js"],"names":["quoteList","authorList","Generator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","quoteGen","randomQuote","Math","floor","random","length","QuoteGenerator","document","getElementById","animate","opacity","react_default","a","createElement","id","onClick","className","React","Component","Tweeter","tweetThat","window","open","encodeURIComponent","quotes","authorer","href","target","Background","MainIntro","newQuote","newAuthor","setState","quote","author","state","background_Background","Generator_Generator","bind","tweeter_Tweeter","App","MainIntro_MainIntro","Boolean","location","hostname","match","mainNode","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e969e8e.chunk.js","sourcesContent":["import React from 'react';\n\n// 20 random quotes from Hunter X Hunter and their authors.\nconst quoteList = [\n    \"Gon, you are light...Sometimes you shine so bright, I have to look away.\",\n    \"When I say it doesn't hurt me, that means I can bear it. \",\n    \"A beast in human's clothing understands better than anyone how people want to be treated. \",\n    \"I do not fear death. I fear only that my rage will fade over time. \",\n    \"You should enjoy the little detours to the fullest. Because that's where you'll find the things more important than what you want. \",\n    \"Who wants to have their life planned out for them ? \",\n    \"If you want to get to know someone, find out what makes them angry. \",\n    \"It takes a mere second for treasure to turn to trash. \",\n    \"You believe I cannot pray with a single arm? A prayer comes from the heart. If the heart achieves the correct form, it becomes emotions and emotions can be manifested. \",\n    \"The only principle is that there are no principles. \",\n    \"When I ignore a friend I have the ability to help, wouldn't I be betraying him? \",\n    \"For the right price, you can buy not only treasures, but dreams, hearts and even people’s lives! \",\n    \"Human potential for evolution is limitless. \",\n    \"He's my buddy, my friend. But it wasn't until recently that I realized that \",\n    \"If you're willing to do whatever it takes. I won't hold back. \",\n    \"Qualification isn't something we have to talk about. The ones who are not okay with their success can go through training until they are. \",\n    \"An apology is a promise to do things differently next time, and to keep the promise. \",\n    \"If you are lying it will be easy on my mind. I won't have to show you any mercy. I can defeat you without hesitation. \",\n    \"Right now, I’m letting you live. And I’ll continue to keep you alive… until you’ve grown enough to become worth killing. \",\n    \"In the hands of an incompetent, power brings nothing but ruins. This could only be the works of imbeciles. \"\n];\nconst authorList = [\n    \"- Killua Zoldyck\",\n    \"- Killua Zoldyck\",\n    \"- Kurapika\",\n    \"- Kurapika\",\n    \"- Ging Freecs\",\n    \"- Killua Zoldyck\",\n    \"- Gon Freecs\",\n    \"- Hisoka Morow\",\n    \"- Isaac Netero\",\n    \"- Kurapika\",\n    \"- Killua Zoldyck\",\n    \"- Leorio Paladiknight\",\n    \"- Isaac Netero\",\n    \"- Leorio Paladiknight\",\n    \"- Gon Freecs\",\n    \"- Gon Freecs\",\n    \"- Ging Freecs\",\n    \"- Gon Freecs\",\n    \"- Hisoka Morow\",\n    \"- MERUEM\"\n];\n\n//function quoteGen\n\nexport default class Generator extends React.Component{\n constructor(props){\n     super(props);\n }\n quoteGen = () =>{\n    let randomQuote = Math.floor(Math.random() * Math.floor(quoteList.length-1));\n    this.props.QuoteGenerator(quoteList[randomQuote],authorList[randomQuote]);\n    document.getElementById(\"text\").animate(\n        { opacity: 0 },\n        1000,\n        function() {\n          document.getElementById(\"text\").animate({ opacity: 1}, 1000);\n        }\n      );\n     \n    document.getElementById(\"author\").animate(\n      { opacity: 0 },\n      1000,\n      function() {\n        document.getElementById(\"text\").animate({ opacity: 1}, 1000);\n      }\n    );  \n }\n\n render(){\n     return(<button id=\"new-quote\" onClick={this.quoteGen} className=\"btn btn-success buttonStyle\">New Quote</button>);\n }\n};\n    \n    \n\n","import React from 'react';\n\nexport default class Tweeter extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    tweetThat = () => {\n        window.open('https://twitter.com/intent/tweet?hashtags=quotes,hunterxhunter&related=freecodecamp&text=' + encodeURIComponent('\"' + this.props.quotes + '\" ' + this.props.authorer));\n    }\n\n    render(){\n        return(\n            <a href=\"twitter.com/intent/tweet\" onClick={this.tweetThat} id=\"tweet-quote\" target=\"_blank\" className=\"btn btn-info buttonStyle\">\n            <i className=\"fa fa-twitter\"/> \n             {\" \"}\n             Tweet{\" \"}\n            </a>\n        )\n    }\n}","import React from 'react';\n\nexport default class Background extends React.Component{\n    render(){\n        return(\n            <div className=\"backgrounder\">\n             \n            </div>    \n        );\n    }\n}","import React from 'react';\nimport Generator from './Generator.js'\nimport Tweeter from './tweeter.js';\nimport Background from './background.js';\n\nimport './main.css';\n\n\nexport default class MainIntro extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      quote:\"Gon, you are light. Sometimes you shine so bright, I have to look away.\",\n      author:'- Killua Zoldyck'\n    }\n   }\n\n   QuoteGenerator = (newQuote,newAuthor) => {\n    this.setState({\n      quote:newQuote,\n      author:newAuthor\n    });\n   }\n\n   render(){\n    return(\n\n      \n     <div id=\"quote-box\">\n     <Background />\n     \n      <h1> Hunter x Hunter Quotes </h1>\n\n      <div id=\"text\">\n        \"{this.state.quote}\"\n      </div>\n\n      <div id=\"author\">{this.state.author}</div>\n\n      <Generator QuoteGenerator={this.QuoteGenerator.bind(this)} /> \n      \n      <Tweeter quotes={this.state.quote} authorer={this.state.author} />\n      \n    </div>\n    );\n}\n}\n","import React, { Component } from 'react';\nimport MainIntro from './components/MainIntro.js'\n\nclass App extends Component {  \n  render(){\n    return(\n        <MainIntro/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst mainNode = document.getElementById('root');\nReactDOM.render(<App />, mainNode);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}